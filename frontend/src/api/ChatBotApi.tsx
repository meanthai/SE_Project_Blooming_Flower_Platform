import { useMutation } from "react-query";
import { toast } from "sonner";

const VITE_API_BACKEND_PY_URL = import.meta.env.VITE_API_BACKEND_PY_URL;

type PromptData = {
    prompt: string,
    userId: string,
    timeStamp?: string,
};

type PromptOutput = {
    response: string,
}

export const getChatBotResponseRequest = async (inputPrompt: PromptData): Promise<PromptOutput> => {
    console.log("Send request!!!!")
    console.log("Request URL:", `${VITE_API_BACKEND_PY_URL}/api/chatbot/response`);
    console.log("Request payload:", inputPrompt);
    
    const response = await fetch(`${VITE_API_BACKEND_PY_URL}/api/chatbot/response`, {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
        },
        body: JSON.stringify(inputPrompt),
    });

    console.log("Response: ", response)

    if(!response.ok){
        throw new Error("Error while getting response from the chatbot from frontend!");
    }

    const data = await response.json();

    return data as PromptOutput;
}

// export const useGetChatBotResponse = () => {

//     console.log("Python backend URL: ", `${VITE_API_BACKEND_PY_URL}/api/chatbot/response`);

//     const getChatBotResponseRequest = async (inputPrompt: PromptData): Promise<PromptOutput> => {
//         const response = await fetch(`${VITE_API_BACKEND_PY_URL}/api/chatbot/response`, {
//             method: "POST",
//             headers: {
//                 "Content-Type": "application/json",
//             },
//             body: JSON.stringify(inputPrompt),
//         });

//         if(!response.ok){
//             throw new Error("Error while getting response from the chatbot from frontend!");
//         }

//         const data = await response.json();

//         return data as PromptOutput;
//     }

//     const {
//         mutate: getChatBotResponse,
//         isLoading,
//         isSuccess,
//         error,
//         data: chatbotResponse,
//         reset,
//     } = useMutation(getChatBotResponseRequest);

//     if(isSuccess) {
//         toast.success("The response has been successfully generated by the chatbot!");
//     }

//     if(error) {
//         toast.error("Error happens while the chatbot generating response!");
//         reset();
//     }

//     return { getChatBotResponse, chatbotResponse, isLoading }
// }